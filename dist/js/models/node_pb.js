// source: models/node.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpc.Node', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpc.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpc.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpc.Node.displayName = 'proto.grpc.Node';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpc.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.grpc.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpc.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mac: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hostname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    key: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isMaster: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    updateTs: jspb.Message.getFieldWithDefault(msg, 12, ""),
    createTs: jspb.Message.getFieldWithDefault(msg, 13, ""),
    updateTsUnix: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpc.Node}
 */
proto.grpc.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpc.Node;
  return proto.grpc.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpc.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpc.Node}
 */
proto.grpc.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPort(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMac(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMaster(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdateTs(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTsUnix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpc.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpc.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpc.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpc.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMac();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsMaster();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getUpdateTs();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCreateTs();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUpdateTsUnix();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
};


/**
 * optional string _id = 1;
 * @return {string}
 */
proto.grpc.Node.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.grpc.Node.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ip = 3;
 * @return {string}
 */
proto.grpc.Node.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string port = 5;
 * @return {string}
 */
proto.grpc.Node.prototype.getPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setPort = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mac = 6;
 * @return {string}
 */
proto.grpc.Node.prototype.getMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setMac = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string hostname = 7;
 * @return {string}
 */
proto.grpc.Node.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setHostname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.grpc.Node.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string key = 9;
 * @return {string}
 */
proto.grpc.Node.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool is_master = 11;
 * @return {boolean}
 */
proto.grpc.Node.prototype.getIsMaster = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setIsMaster = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string update_ts = 12;
 * @return {string}
 */
proto.grpc.Node.prototype.getUpdateTs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setUpdateTs = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string create_ts = 13;
 * @return {string}
 */
proto.grpc.Node.prototype.getCreateTs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setCreateTs = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int64 update_ts_unix = 14;
 * @return {number}
 */
proto.grpc.Node.prototype.getUpdateTsUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpc.Node} returns this
 */
proto.grpc.Node.prototype.setUpdateTsUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


goog.object.extend(exports, proto.grpc);
