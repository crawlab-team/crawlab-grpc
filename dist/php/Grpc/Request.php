<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: entity/request.proto

namespace Grpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>grpc.Request</code>
 */
class Request extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.grpc.NodeInfo node = 1;</code>
     */
    protected $node = null;
    /**
     * Generated from protobuf field <code>bytes data = 2;</code>
     */
    protected $data = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Grpc\NodeInfo $node
     *     @type string $data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Entity\Request::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.grpc.NodeInfo node = 1;</code>
     * @return \Grpc\NodeInfo
     */
    public function getNode()
    {
        return isset($this->node) ? $this->node : null;
    }

    public function hasNode()
    {
        return isset($this->node);
    }

    public function clearNode()
    {
        unset($this->node);
    }

    /**
     * Generated from protobuf field <code>.grpc.NodeInfo node = 1;</code>
     * @param \Grpc\NodeInfo $var
     * @return $this
     */
    public function setNode($var)
    {
        GPBUtil::checkMessage($var, \Grpc\NodeInfo::class);
        $this->node = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes data = 2;</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Generated from protobuf field <code>bytes data = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, False);
        $this->data = $var;

        return $this;
    }

}

