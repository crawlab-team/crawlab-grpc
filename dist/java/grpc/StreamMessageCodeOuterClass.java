// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity/stream_message_code.proto

package grpc;

public final class StreamMessageCodeOuterClass {
  private StreamMessageCodeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code grpc.StreamMessageCode}
   */
  public enum StreamMessageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * ping worker nodes to check their health
     * </pre>
     *
     * <code>PING = 0;</code>
     */
    PING(0),
    /**
     * <pre>
     * ask worker node(s) to run task with given id
     * </pre>
     *
     * <code>RUN_TASK = 1;</code>
     */
    RUN_TASK(1),
    /**
     * <pre>
     * ask worker node(s) to cancel task with given id
     * </pre>
     *
     * <code>CANCEL_TASK = 2;</code>
     */
    CANCEL_TASK(2),
    /**
     * <pre>
     * insert data
     * </pre>
     *
     * <code>INSERT_DATA = 3;</code>
     */
    INSERT_DATA(3),
    /**
     * <pre>
     * insert logs
     * </pre>
     *
     * <code>INSERT_LOGS = 4;</code>
     */
    INSERT_LOGS(4),
    /**
     * <pre>
     * send event
     * </pre>
     *
     * <code>SEND_EVENT = 5;</code>
     */
    SEND_EVENT(5),
    /**
     * <pre>
     * install plugin
     * </pre>
     *
     * <code>INSTALL_PLUGIN = 6;</code>
     */
    INSTALL_PLUGIN(6),
    /**
     * <pre>
     * uninstall plugin
     * </pre>
     *
     * <code>UNINSTALL_PLUGIN = 7;</code>
     */
    UNINSTALL_PLUGIN(7),
    /**
     * <pre>
     * start plugin
     * </pre>
     *
     * <code>START_PLUGIN = 8;</code>
     */
    START_PLUGIN(8),
    /**
     * <pre>
     * stop plugin
     * </pre>
     *
     * <code>STOP_PLUGIN = 9;</code>
     */
    STOP_PLUGIN(9),
    /**
     * <pre>
     * connect
     * </pre>
     *
     * <code>CONNECT = 10;</code>
     */
    CONNECT(10),
    /**
     * <pre>
     * disconnect
     * </pre>
     *
     * <code>DISCONNECT = 11;</code>
     */
    DISCONNECT(11),
    /**
     * <pre>
     * send
     * </pre>
     *
     * <code>SEND = 12;</code>
     */
    SEND(12),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * ping worker nodes to check their health
     * </pre>
     *
     * <code>PING = 0;</code>
     */
    public static final int PING_VALUE = 0;
    /**
     * <pre>
     * ask worker node(s) to run task with given id
     * </pre>
     *
     * <code>RUN_TASK = 1;</code>
     */
    public static final int RUN_TASK_VALUE = 1;
    /**
     * <pre>
     * ask worker node(s) to cancel task with given id
     * </pre>
     *
     * <code>CANCEL_TASK = 2;</code>
     */
    public static final int CANCEL_TASK_VALUE = 2;
    /**
     * <pre>
     * insert data
     * </pre>
     *
     * <code>INSERT_DATA = 3;</code>
     */
    public static final int INSERT_DATA_VALUE = 3;
    /**
     * <pre>
     * insert logs
     * </pre>
     *
     * <code>INSERT_LOGS = 4;</code>
     */
    public static final int INSERT_LOGS_VALUE = 4;
    /**
     * <pre>
     * send event
     * </pre>
     *
     * <code>SEND_EVENT = 5;</code>
     */
    public static final int SEND_EVENT_VALUE = 5;
    /**
     * <pre>
     * install plugin
     * </pre>
     *
     * <code>INSTALL_PLUGIN = 6;</code>
     */
    public static final int INSTALL_PLUGIN_VALUE = 6;
    /**
     * <pre>
     * uninstall plugin
     * </pre>
     *
     * <code>UNINSTALL_PLUGIN = 7;</code>
     */
    public static final int UNINSTALL_PLUGIN_VALUE = 7;
    /**
     * <pre>
     * start plugin
     * </pre>
     *
     * <code>START_PLUGIN = 8;</code>
     */
    public static final int START_PLUGIN_VALUE = 8;
    /**
     * <pre>
     * stop plugin
     * </pre>
     *
     * <code>STOP_PLUGIN = 9;</code>
     */
    public static final int STOP_PLUGIN_VALUE = 9;
    /**
     * <pre>
     * connect
     * </pre>
     *
     * <code>CONNECT = 10;</code>
     */
    public static final int CONNECT_VALUE = 10;
    /**
     * <pre>
     * disconnect
     * </pre>
     *
     * <code>DISCONNECT = 11;</code>
     */
    public static final int DISCONNECT_VALUE = 11;
    /**
     * <pre>
     * send
     * </pre>
     *
     * <code>SEND = 12;</code>
     */
    public static final int SEND_VALUE = 12;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StreamMessageCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static StreamMessageCode forNumber(int value) {
      switch (value) {
        case 0: return PING;
        case 1: return RUN_TASK;
        case 2: return CANCEL_TASK;
        case 3: return INSERT_DATA;
        case 4: return INSERT_LOGS;
        case 5: return SEND_EVENT;
        case 6: return INSTALL_PLUGIN;
        case 7: return UNINSTALL_PLUGIN;
        case 8: return START_PLUGIN;
        case 9: return STOP_PLUGIN;
        case 10: return CONNECT;
        case 11: return DISCONNECT;
        case 12: return SEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StreamMessageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StreamMessageCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StreamMessageCode>() {
            public StreamMessageCode findValueByNumber(int number) {
              return StreamMessageCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return grpc.StreamMessageCodeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final StreamMessageCode[] VALUES = values();

    public static StreamMessageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StreamMessageCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:grpc.StreamMessageCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n entity/stream_message_code.proto\022\004grpc" +
      "*\342\001\n\021StreamMessageCode\022\010\n\004PING\020\000\022\014\n\010RUN_" +
      "TASK\020\001\022\017\n\013CANCEL_TASK\020\002\022\017\n\013INSERT_DATA\020\003" +
      "\022\017\n\013INSERT_LOGS\020\004\022\016\n\nSEND_EVENT\020\005\022\022\n\016INS" +
      "TALL_PLUGIN\020\006\022\024\n\020UNINSTALL_PLUGIN\020\007\022\020\n\014S" +
      "TART_PLUGIN\020\010\022\017\n\013STOP_PLUGIN\020\t\022\013\n\007CONNEC" +
      "T\020\n\022\016\n\nDISCONNECT\020\013\022\010\n\004SEND\020\014B\010Z\006.;grpcb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
