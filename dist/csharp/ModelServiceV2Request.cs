// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: entity/model_service_v2_request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc {

  /// <summary>Holder for reflection information generated from entity/model_service_v2_request.proto</summary>
  public static partial class ModelServiceV2RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for entity/model_service_v2_request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelServiceV2RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVlbnRpdHkvbW9kZWxfc2VydmljZV92Ml9yZXF1ZXN0LnByb3RvEgRncnBj",
            "IgQKAklkIjwKHE1vZGVsU2VydmljZVYyR2V0QnlJZFJlcXVlc3QSEAoIbm9k",
            "ZV9rZXkYASABKAkSCgoCaWQYAiABKAkiVAobTW9kZWxTZXJ2aWNlVjJHZXRP",
            "bmVSZXF1ZXN0EhAKCG5vZGVfa2V5GAEgASgJEg0KBXF1ZXJ5GAIgASgMEhQK",
            "DGZpbmRfb3B0aW9ucxgDIAEoDCJVChxNb2RlbFNlcnZpY2VWMkdldE1hbnlS",
            "ZXF1ZXN0EhAKCG5vZGVfa2V5GAEgASgJEg0KBXF1ZXJ5GAIgASgMEhQKDGZp",
            "bmRfb3B0aW9ucxgDIAEoDCI/Ch9Nb2RlbFNlcnZpY2VWMkRlbGV0ZUJ5SWRS",
            "ZXF1ZXN0EhAKCG5vZGVfa2V5GAEgASgJEgoKAmlkGAIgASgJIkEKHk1vZGVs",
            "U2VydmljZVYyRGVsZXRlT25lUmVxdWVzdBIQCghub2RlX2tleRgBIAEoCRIN",
            "CgVxdWVyeRgCIAEoDCJCCh9Nb2RlbFNlcnZpY2VWMkRlbGV0ZU1hbnlSZXF1",
            "ZXN0EhAKCG5vZGVfa2V5GAEgASgJEg0KBXF1ZXJ5GAIgASgMIk8KH01vZGVs",
            "U2VydmljZVYyVXBkYXRlQnlJZFJlcXVlc3QSEAoIbm9kZV9rZXkYASABKAkS",
            "CgoCaWQYAiABKAkSDgoGdXBkYXRlGAMgASgMIlEKHk1vZGVsU2VydmljZVYy",
            "VXBkYXRlT25lUmVxdWVzdBIQCghub2RlX2tleRgBIAEoCRINCgVxdWVyeRgC",
            "IAEoDBIOCgZ1cGRhdGUYAyABKAwiUgofTW9kZWxTZXJ2aWNlVjJVcGRhdGVN",
            "YW55UmVxdWVzdBIQCghub2RlX2tleRgBIAEoCRINCgVxdWVyeRgCIAEoDBIO",
            "CgZ1cGRhdGUYAyABKAwiTwogTW9kZWxTZXJ2aWNlVjJSZXBsYWNlQnlJZFJl",
            "cXVlc3QSEAoIbm9kZV9rZXkYASABKAkSCgoCaWQYAiABKAkSDQoFbW9kZWwY",
            "AyABKAwiUQofTW9kZWxTZXJ2aWNlVjJSZXBsYWNlT25lUmVxdWVzdBIQCghu",
            "b2RlX2tleRgBIAEoCRINCgVxdWVyeRgCIAEoDBINCgVtb2RlbBgDIAEoDCJB",
            "Ch5Nb2RlbFNlcnZpY2VWMkluc2VydE9uZVJlcXVlc3QSEAoIbm9kZV9rZXkY",
            "ASABKAkSDQoFbW9kZWwYAiABKAwiQwofTW9kZWxTZXJ2aWNlVjJJbnNlcnRN",
            "YW55UmVxdWVzdBIQCghub2RlX2tleRgBIAEoCRIOCgZtb2RlbHMYAiABKAwi",
            "PQoaTW9kZWxTZXJ2aWNlVjJDb3VudFJlcXVlc3QSEAoIbm9kZV9rZXkYASAB",
            "KAkSDQoFcXVlcnkYAiABKAxCCFoGLjtncnBjYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Id), global::Grpc.Id.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2GetByIdRequest), global::Grpc.ModelServiceV2GetByIdRequest.Parser, new[]{ "NodeKey", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2GetOneRequest), global::Grpc.ModelServiceV2GetOneRequest.Parser, new[]{ "NodeKey", "Query", "FindOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2GetManyRequest), global::Grpc.ModelServiceV2GetManyRequest.Parser, new[]{ "NodeKey", "Query", "FindOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2DeleteByIdRequest), global::Grpc.ModelServiceV2DeleteByIdRequest.Parser, new[]{ "NodeKey", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2DeleteOneRequest), global::Grpc.ModelServiceV2DeleteOneRequest.Parser, new[]{ "NodeKey", "Query" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2DeleteManyRequest), global::Grpc.ModelServiceV2DeleteManyRequest.Parser, new[]{ "NodeKey", "Query" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2UpdateByIdRequest), global::Grpc.ModelServiceV2UpdateByIdRequest.Parser, new[]{ "NodeKey", "Id", "Update" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2UpdateOneRequest), global::Grpc.ModelServiceV2UpdateOneRequest.Parser, new[]{ "NodeKey", "Query", "Update" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2UpdateManyRequest), global::Grpc.ModelServiceV2UpdateManyRequest.Parser, new[]{ "NodeKey", "Query", "Update" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2ReplaceByIdRequest), global::Grpc.ModelServiceV2ReplaceByIdRequest.Parser, new[]{ "NodeKey", "Id", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2ReplaceOneRequest), global::Grpc.ModelServiceV2ReplaceOneRequest.Parser, new[]{ "NodeKey", "Query", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2InsertOneRequest), global::Grpc.ModelServiceV2InsertOneRequest.Parser, new[]{ "NodeKey", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2InsertManyRequest), global::Grpc.ModelServiceV2InsertManyRequest.Parser, new[]{ "NodeKey", "Models" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.ModelServiceV2CountRequest), global::Grpc.ModelServiceV2CountRequest.Parser, new[]{ "NodeKey", "Query" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Id : pb::IMessage<Id> {
    private static readonly pb::MessageParser<Id> _parser = new pb::MessageParser<Id>(() => new Id());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Id> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id(Id other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id Clone() {
      return new Id(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Id);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Id other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Id other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ModelServiceV2GetByIdRequest : pb::IMessage<ModelServiceV2GetByIdRequest> {
    private static readonly pb::MessageParser<ModelServiceV2GetByIdRequest> _parser = new pb::MessageParser<ModelServiceV2GetByIdRequest>(() => new ModelServiceV2GetByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2GetByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetByIdRequest(ModelServiceV2GetByIdRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetByIdRequest Clone() {
      return new ModelServiceV2GetByIdRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2GetByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2GetByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2GetByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2GetOneRequest : pb::IMessage<ModelServiceV2GetOneRequest> {
    private static readonly pb::MessageParser<ModelServiceV2GetOneRequest> _parser = new pb::MessageParser<ModelServiceV2GetOneRequest>(() => new ModelServiceV2GetOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2GetOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetOneRequest(ModelServiceV2GetOneRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      findOptions_ = other.findOptions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetOneRequest Clone() {
      return new ModelServiceV2GetOneRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "find_options" field.</summary>
    public const int FindOptionsFieldNumber = 3;
    private pb::ByteString findOptions_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FindOptions {
      get { return findOptions_; }
      set {
        findOptions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2GetOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2GetOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      if (FindOptions != other.FindOptions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (FindOptions.Length != 0) hash ^= FindOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (FindOptions.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FindOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (FindOptions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FindOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2GetOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.FindOptions.Length != 0) {
        FindOptions = other.FindOptions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 26: {
            FindOptions = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2GetManyRequest : pb::IMessage<ModelServiceV2GetManyRequest> {
    private static readonly pb::MessageParser<ModelServiceV2GetManyRequest> _parser = new pb::MessageParser<ModelServiceV2GetManyRequest>(() => new ModelServiceV2GetManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2GetManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetManyRequest(ModelServiceV2GetManyRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      findOptions_ = other.findOptions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2GetManyRequest Clone() {
      return new ModelServiceV2GetManyRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "find_options" field.</summary>
    public const int FindOptionsFieldNumber = 3;
    private pb::ByteString findOptions_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FindOptions {
      get { return findOptions_; }
      set {
        findOptions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2GetManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2GetManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      if (FindOptions != other.FindOptions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (FindOptions.Length != 0) hash ^= FindOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (FindOptions.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FindOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (FindOptions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FindOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2GetManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.FindOptions.Length != 0) {
        FindOptions = other.FindOptions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 26: {
            FindOptions = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2DeleteByIdRequest : pb::IMessage<ModelServiceV2DeleteByIdRequest> {
    private static readonly pb::MessageParser<ModelServiceV2DeleteByIdRequest> _parser = new pb::MessageParser<ModelServiceV2DeleteByIdRequest>(() => new ModelServiceV2DeleteByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2DeleteByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteByIdRequest(ModelServiceV2DeleteByIdRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteByIdRequest Clone() {
      return new ModelServiceV2DeleteByIdRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2DeleteByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2DeleteByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2DeleteByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2DeleteOneRequest : pb::IMessage<ModelServiceV2DeleteOneRequest> {
    private static readonly pb::MessageParser<ModelServiceV2DeleteOneRequest> _parser = new pb::MessageParser<ModelServiceV2DeleteOneRequest>(() => new ModelServiceV2DeleteOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2DeleteOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteOneRequest(ModelServiceV2DeleteOneRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteOneRequest Clone() {
      return new ModelServiceV2DeleteOneRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2DeleteOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2DeleteOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2DeleteOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2DeleteManyRequest : pb::IMessage<ModelServiceV2DeleteManyRequest> {
    private static readonly pb::MessageParser<ModelServiceV2DeleteManyRequest> _parser = new pb::MessageParser<ModelServiceV2DeleteManyRequest>(() => new ModelServiceV2DeleteManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2DeleteManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteManyRequest(ModelServiceV2DeleteManyRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2DeleteManyRequest Clone() {
      return new ModelServiceV2DeleteManyRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2DeleteManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2DeleteManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2DeleteManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2UpdateByIdRequest : pb::IMessage<ModelServiceV2UpdateByIdRequest> {
    private static readonly pb::MessageParser<ModelServiceV2UpdateByIdRequest> _parser = new pb::MessageParser<ModelServiceV2UpdateByIdRequest>(() => new ModelServiceV2UpdateByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2UpdateByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateByIdRequest(ModelServiceV2UpdateByIdRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      id_ = other.id_;
      update_ = other.update_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateByIdRequest Clone() {
      return new ModelServiceV2UpdateByIdRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    private pb::ByteString update_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Update {
      get { return update_; }
      set {
        update_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2UpdateByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2UpdateByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Id != other.Id) return false;
      if (Update != other.Update) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Update.Length != 0) hash ^= Update.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Update.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Update.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2UpdateByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Update.Length != 0) {
        Update = other.Update;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Update = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2UpdateOneRequest : pb::IMessage<ModelServiceV2UpdateOneRequest> {
    private static readonly pb::MessageParser<ModelServiceV2UpdateOneRequest> _parser = new pb::MessageParser<ModelServiceV2UpdateOneRequest>(() => new ModelServiceV2UpdateOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2UpdateOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateOneRequest(ModelServiceV2UpdateOneRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      update_ = other.update_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateOneRequest Clone() {
      return new ModelServiceV2UpdateOneRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    private pb::ByteString update_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Update {
      get { return update_; }
      set {
        update_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2UpdateOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2UpdateOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      if (Update != other.Update) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Update.Length != 0) hash ^= Update.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (Update.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (Update.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2UpdateOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Update.Length != 0) {
        Update = other.Update;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 26: {
            Update = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2UpdateManyRequest : pb::IMessage<ModelServiceV2UpdateManyRequest> {
    private static readonly pb::MessageParser<ModelServiceV2UpdateManyRequest> _parser = new pb::MessageParser<ModelServiceV2UpdateManyRequest>(() => new ModelServiceV2UpdateManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2UpdateManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateManyRequest(ModelServiceV2UpdateManyRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      update_ = other.update_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2UpdateManyRequest Clone() {
      return new ModelServiceV2UpdateManyRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    private pb::ByteString update_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Update {
      get { return update_; }
      set {
        update_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2UpdateManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2UpdateManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      if (Update != other.Update) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Update.Length != 0) hash ^= Update.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (Update.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (Update.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2UpdateManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Update.Length != 0) {
        Update = other.Update;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 26: {
            Update = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2ReplaceByIdRequest : pb::IMessage<ModelServiceV2ReplaceByIdRequest> {
    private static readonly pb::MessageParser<ModelServiceV2ReplaceByIdRequest> _parser = new pb::MessageParser<ModelServiceV2ReplaceByIdRequest>(() => new ModelServiceV2ReplaceByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2ReplaceByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceByIdRequest(ModelServiceV2ReplaceByIdRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      id_ = other.id_;
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceByIdRequest Clone() {
      return new ModelServiceV2ReplaceByIdRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private pb::ByteString model_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2ReplaceByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2ReplaceByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Id != other.Id) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2ReplaceByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Model = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2ReplaceOneRequest : pb::IMessage<ModelServiceV2ReplaceOneRequest> {
    private static readonly pb::MessageParser<ModelServiceV2ReplaceOneRequest> _parser = new pb::MessageParser<ModelServiceV2ReplaceOneRequest>(() => new ModelServiceV2ReplaceOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2ReplaceOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceOneRequest(ModelServiceV2ReplaceOneRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2ReplaceOneRequest Clone() {
      return new ModelServiceV2ReplaceOneRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private pb::ByteString model_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2ReplaceOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2ReplaceOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2ReplaceOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 26: {
            Model = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2InsertOneRequest : pb::IMessage<ModelServiceV2InsertOneRequest> {
    private static readonly pb::MessageParser<ModelServiceV2InsertOneRequest> _parser = new pb::MessageParser<ModelServiceV2InsertOneRequest>(() => new ModelServiceV2InsertOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2InsertOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertOneRequest(ModelServiceV2InsertOneRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertOneRequest Clone() {
      return new ModelServiceV2InsertOneRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private pb::ByteString model_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2InsertOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2InsertOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2InsertOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2InsertManyRequest : pb::IMessage<ModelServiceV2InsertManyRequest> {
    private static readonly pb::MessageParser<ModelServiceV2InsertManyRequest> _parser = new pb::MessageParser<ModelServiceV2InsertManyRequest>(() => new ModelServiceV2InsertManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2InsertManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertManyRequest(ModelServiceV2InsertManyRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      models_ = other.models_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2InsertManyRequest Clone() {
      return new ModelServiceV2InsertManyRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 2;
    private pb::ByteString models_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Models {
      get { return models_; }
      set {
        models_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2InsertManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2InsertManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Models != other.Models) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Models.Length != 0) hash ^= Models.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Models.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Models);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Models.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Models);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2InsertManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Models.Length != 0) {
        Models = other.Models;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Models = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModelServiceV2CountRequest : pb::IMessage<ModelServiceV2CountRequest> {
    private static readonly pb::MessageParser<ModelServiceV2CountRequest> _parser = new pb::MessageParser<ModelServiceV2CountRequest>(() => new ModelServiceV2CountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelServiceV2CountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.ModelServiceV2RequestReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2CountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2CountRequest(ModelServiceV2CountRequest other) : this() {
      nodeKey_ = other.nodeKey_;
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelServiceV2CountRequest Clone() {
      return new ModelServiceV2CountRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private string nodeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelServiceV2CountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelServiceV2CountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeKey != other.NodeKey) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeKey.Length != 0) hash ^= NodeKey.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeKey);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeKey);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelServiceV2CountRequest other) {
      if (other == null) {
        return;
      }
      if (other.NodeKey.Length != 0) {
        NodeKey = other.NodeKey;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeKey = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
