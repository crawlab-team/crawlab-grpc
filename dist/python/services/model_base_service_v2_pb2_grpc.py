# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from entity import request_pb2 as entity_dot_request__pb2
from entity import response_pb2 as entity_dot_response__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in services/model_base_service_v2_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class ModelBaseServiceV2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetById = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/GetById',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/Get',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.GetList = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/GetList',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.DeleteById = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/DeleteById',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.DeleteList = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/DeleteList',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.UpdateById = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/UpdateById',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.UpdateOne = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/UpdateOne',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.UpdateMany = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/UpdateMany',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.ReplaceById = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/ReplaceById',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.Replace = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/Replace',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.InsertOne = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/InsertOne',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.InsertMany = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/InsertMany',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.Count = channel.unary_unary(
                '/grpc.ModelBaseServiceV2/Count',
                request_serializer=entity_dot_request__pb2.Request.SerializeToString,
                response_deserializer=entity_dot_response__pb2.Response.FromString,
                _registered_method=True)


class ModelBaseServiceV2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplaceById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelBaseServiceV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetById,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'GetList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetList,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'DeleteById': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteById,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'DeleteList': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteList,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'UpdateById': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateById,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'UpdateOne': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOne,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'UpdateMany': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMany,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'ReplaceById': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplaceById,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'Replace': grpc.unary_unary_rpc_method_handler(
                    servicer.Replace,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'InsertOne': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertOne,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'InsertMany': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertMany,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=entity_dot_request__pb2.Request.FromString,
                    response_serializer=entity_dot_response__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.ModelBaseServiceV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc.ModelBaseServiceV2', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ModelBaseServiceV2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/GetById',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/Get',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/GetList',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/DeleteById',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/DeleteList',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/UpdateById',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/UpdateOne',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/UpdateMany',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReplaceById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/ReplaceById',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Replace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/Replace',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InsertOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/InsertOne',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InsertMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/InsertMany',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.ModelBaseServiceV2/Count',
            entity_dot_request__pb2.Request.SerializeToString,
            entity_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
